{"version":3,"sources":["authaxios.js","components/home.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","mode","headers","module","export","instances","props","accept","boundary","Home","handleChange","e","preventDefault","target","name","value","setState","state","test","login","username","password","activeshapes","activeIndex","selections","this","length","Object","keys","data","Color","Shape","every","val","i","arr","shape","color","addall","index","findIndex","v","splice","decision","colo","push","loading","alert","className","onSubmit","handleSubmit","onChange","type","placeholder","onClick","Login","Logout","style","fontSize","icon","faSignOutAlt","map","datas","key","display","some","code","remove","background","border","add","Component","Main","exact","path","component","subdomain","window","location","host","split","customer_key","Math","floor","random","String","localStorage","setItem","App","avail","collapse","isWideEnough","bind","console","log","post","res","result","success","store_id","description","logo","address","phone","delivery","delivery_fee","bg","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ca77526.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.swip.ng/\",\n  mode: \"cors\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nconst instances = (props) =>\n  axios.create({\n    baseURL: \"https://api.swip.ng/\",\n    mode: \"cors\",\n    headers: {\n      accept: \"application/json\",\n      \"Accept-Language\": \"en-US,en;q=0.8\",\n      \"Content-Type\": `multipart/form-data; boundary=${props.boundary}`,\n    },\n  });\nexport default instance;\nmodule.export = {\n  instance: instance,\n  instances: instances,\n};\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport data from \"./filter.json\";\nimport \"./style.scss\";\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: \"\",\n      login: \"no\",\n      username: \"admin\",\n      password: \"admin\",\n      activeshapes: \"Round\",\n      activeIndex: 0,\n      selections: [],\n    };\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n  async decision() {\n    if (\n      this.state.selections.length ===\n      Object.keys(data.Color).length * Object.keys(data.Shape).length\n    ) {\n      this.setState({ test: \"All items\" });\n    } else if (\n      this.state.selections.every(\n        (val, i, arr) =>\n          val.shape === arr[0].shape && this.state.selections.length > 1\n      ) &&\n      !this.state.selections.every(\n        (val, i, arr) => val.color === arr[0].color\n      ) &&\n      this.state.selections.length > Object.keys(data.Color).length - 1\n    ) {\n      this.setState({\n        test: \"All \" + this.state.selections[0].shape + \" items\",\n      });\n    } else if (\n      this.state.selections.every(\n        (val, i, arr) => val.color === arr[0].color\n      ) &&\n      !this.state.selections.every(\n        (val, i, arr) => val.color === arr[0].shape\n      ) &&\n      this.state.selections.length > Object.keys(data.Shape).length - 1\n    ) {\n      this.setState({\n        test: \"All \" + this.state.selections[0].color + \" items\",\n      });\n    } else if (this.state.selections.length === 1) {\n      this.setState({\n        test:\n          this.state.selections[0].shape +\n          \" \" +\n          this.state.selections[0].color +\n          \" \" +\n          \"items\",\n      });\n    } else if (\n      this.state.selections.every(\n        (val, i, arr) => val.color === arr[0].color\n      ) &&\n      !this.state.selections.every((val, i, arr) => val.shape === arr[0].shape)\n    ) {\n      this.setState({\n        test: \"Multiple \" + this.state.selections[0].color + \" items\",\n      });\n    } else if (\n      this.state.selections.every(\n        (val, i, arr) => val.shape === arr[0].shape\n      ) &&\n      !this.state.selections.every((val, i, arr) => val.color === arr[0].color)\n    ) {\n      this.setState({\n        test: \"Multiple \" + this.state.selections[0].shape + \" items\",\n      });\n    } else {\n      this.setState({\n        test: \"Multiple items\",\n      });\n    }\n  }\n\n  async remove(color) {\n    if (this.state.selections.length === 1) {\n      this.addall();\n    } else {\n      let index = this.state.selections.findIndex(\n        (v) => v.shape === this.state.activeshapes && v.color === color\n      );\n      this.state.selections.splice(index, 1);\n      this.setState(this.state.selections);\n      this.decision();\n    }\n  }\n  async add(colo) {\n    this.state.selections.push({ shape: this.state.activeshapes, color: colo });\n    this.setState(this.state.selections);\n    this.decision();\n  }\n  async addall() {\n    this.state.selections.push(\n      {\n        shape: \"Round\",\n        color: \"Red\",\n      },\n      {\n        shape: \"Round\",\n        color: \"Blue\",\n      },\n      {\n        shape: \"Round\",\n        color: \"Green\",\n      },\n      {\n        shape: \"Round\",\n        color: \"Brown\",\n      },\n      {\n        shape: \"Round\",\n        color: \"Yellow\",\n      },\n      {\n        shape: \"Oval\",\n        color: \"Red\",\n      },\n      {\n        shape: \"Oval\",\n        color: \"Blue\",\n      },\n      {\n        shape: \"Oval\",\n        color: \"Green\",\n      },\n      {\n        shape: \"Oval\",\n        color: \"Brown\",\n      },\n      {\n        shape: \"Oval\",\n        color: \"Yellow\",\n      },\n      {\n        shape: \"Rectangle\",\n        color: \"Red\",\n      },\n      {\n        shape: \"Rectangle\",\n        color: \"Blue\",\n      },\n      {\n        shape: \"Rectangle\",\n        color: \"Green\",\n      },\n      {\n        shape: \"Rectangle\",\n        color: \"Brown\",\n      },\n      {\n        shape: \"Rectangle\",\n        color: \"Yellow\",\n      },\n      {\n        shape: \"Square\",\n        color: \"Red\",\n      },\n      {\n        shape: \"Square\",\n        color: \"Blue\",\n      },\n      {\n        shape: \"Square\",\n        color: \"Green\",\n      },\n      {\n        shape: \"Square\",\n        color: \"Brown\",\n      },\n      {\n        shape: \"Square\",\n        color: \"Yellow\",\n      }\n    );\n    this.decision();\n  }\n\n  async Login() {\n    this.setState({ loading: true });\n    if (this.state.username === \"admin\" && this.state.password === \"admin\") {\n      this.setState({ login: \"yes\" });\n    } else {\n      alert(\"Invalid username or password\");\n    }\n  }\n  async Logout() {\n    this.setState({ login: \"no\" });\n  }\n  async componentDidMount() {\n    this.addall();\n  }\n  render() {\n    if (this.state.login === \"no\") {\n      return (\n        <>\n          <div className=\"body-login\">\n            <div className=\"loginform\">\n              <div className=\"sign-in-container\">\n                <h1>Sign in</h1>\n                <form onSubmit={this.handleSubmit}>\n                  <input\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username ? this.state.username : \"\"}\n                    placeholder=\"Username\"\n                  />\n\n                  <input\n                    onChange={this.handleChange}\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password ? this.state.password : \"\"}\n                    placeholder=\"Password\"\n                  />\n                  <button onClick={() => this.Login()}>Login</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"header_topper\">\n            <div className=\"wrapit\">\n              <div className=\"headers\">\n                <div className=\"logo\">SHAPES</div>\n                <div className=\"logout\" onClick={() => this.Logout()}>\n                  Logout{\" \"}\n                  <FontAwesomeIcon\n                    onClick={() => this.Logout()}\n                    style={{ fontSize: \"15px\" }}\n                    icon={faSignOutAlt}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"body\">\n            <div className=\"wrapit\">\n              <h1>Filters </h1>\n              <h6>Shapes</h6>\n              <div className=\"button-shapes\">\n                {data.Shape.map((datas, key) => (\n                  <>\n                    <button\n                      className={key === this.state.activeIndex ? \"active\" : \"\"}\n                      onClick={() =>\n                        this.setState({\n                          activeIndex: key,\n                          activeshapes: datas.shape,\n                        })\n                      }\n                    >\n                      {datas.shape}\n                    </button>\n                  </>\n                ))}\n              </div>\n              <h6>Colors</h6>\n              <div className=\"button-colors\">\n                {data.Color.map((datas, key) => (\n                  <div style={{ display: \"inline-block\" }} key={key}>\n                    {this.state.selections.some(\n                      (code) =>\n                        (code.shape === this.state.activeshapes) &\n                        (code.color === datas.color)\n                    ) && (\n                      <>\n                        {\" \"}\n                        <button\n                          onClick={() => this.remove(datas.color)}\n                          style={{\n                            background: datas.color,\n                            border: \"2px solid blue\",\n                          }}\n                        ></button>\n                      </>\n                    )}\n                    {!this.state.selections.some(\n                      (code) =>\n                        (code.shape === this.state.activeshapes) &\n                        (code.color === datas.color)\n                    ) && (\n                      <>\n                        {\" \"}\n                        <button\n                          onClick={() => this.add(datas.color)}\n                          style={{ background: datas.color }}\n                        ></button>\n                      </>\n                    )}\n                  </div>\n                ))}\n              </div>\n              <h1>{this.state.test}</h1>\n              <div className=\"colorshape\">\n                {this.state.selections.map((data, key) => (\n                  <div className=\"bg\">\n                    <div\n                      className={data.shape}\n                      style={{ background: data.color }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./home\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/main\";\nimport instance from \"./authaxios\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nlet subdomain = window.location.host.split(\".\")[0];\nif (subdomain === \"www\") {\n  subdomain = window.location.host.split(\".\")[1];\n} else {\n  subdomain = window.location.host.split(\".\")[0];\n}\nlet customer_key =\n  Math.floor(100000 + Math.random() * 900000) +\n  String(Math.floor(100 + Math.random() * 999));\nlocalStorage.setItem(\"customer_id\", customer_key);\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avail: \"yes\",\n      collapse: false,\n      isWideEnough: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n  async componentDidMount() {\n    console.log(subdomain);\n    try {\n      let res = await instance.post(\"/checkstore\", {\n        username: subdomain,\n      });\n      let result = await res.data;\n      if (result && result.success) {\n        this.setState({ avail: \"yes\" });\n        localStorage.setItem(\"owner_id\", result.store_id);\n        localStorage.setItem(\"subdomain\", subdomain);\n        localStorage.setItem(\"name\", result.name);\n        localStorage.setItem(\"description\", result.description);\n        localStorage.setItem(\"logo\", result.logo);\n        localStorage.setItem(\"address\", result.address);\n        localStorage.setItem(\"phone\", result.phone);\n        localStorage.setItem(\"delivery\", result.delivery);\n        localStorage.setItem(\"delivery_fee\", result.delivery_fee);\n        localStorage.setItem(\"bg\", result.bg);\n      } else if (result && result.success === false) {\n        this.setState({ avail: \"no\" });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n\n    /*\n  \n   const { avail } = this.state;\n    if (avail === \"yes\") {\n      return (\n        <div>\n          <Main />\n        </div>\n      );\n    } else if (avail === \"no\") {\n      return (\n        <div className=\"domain404\">\n          <div className=\"domain4041\">\n            <h2>404 Not Found</h2>\n\n            <p>\n              The subdomain {subdomain}.swip.ng doesn`t exist. please use this\n              link to signup if you are a new swip user.\n            </p>\n            <a href=\"http://swip.ng\">Swip Home</a>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"domain404\">\n          <div className=\"domain4041\">\n            <h2>404 Not Found</h2>\n\n            <p>\n              The subdomain {subdomain}.swip.ng doesn`t exist. please use this\n              link to signup if you are a new swip user.\n            </p>\n            <a href=\"http://swip.ng\">Swip Home</a>\n          </div>\n        </div>\n      );\n    }\n  */\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={\"/pipeline/\"}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}